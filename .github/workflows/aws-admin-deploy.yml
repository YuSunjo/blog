#name: Deploy to Amazon ECS
#
#on:
#  push:
#    branches:
#      - develop
#
#jobs:
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    environment: production
#
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v2
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: ap-northeast-2
#
#    - name: Login to Amazon ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: Build, tag, and push image to Amazon ECR
#      id: build-image
#      env:
#        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        ECR_REPOSITORY: blog-admin
#        IMAGE_TAG: ${{ github.sha }}
#      run: |
#        # Build a docker container and
#        # push it to ECR so that it can
#        # be deployed to ECS.
#        docker build -f Dockerfile_admin -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
#
#    - name: Fill in the new image ID in the Amazon ECS task definition
#      id: task-def
#      uses: aws-actions/amazon-ecs-render-task-definition@v1
#      with:
#        task-definition: task-definition.json
#        container-name: blog-admin-container
#        image: ${{ steps.build-image.outputs.image }}
#
#    - name: Deploy Amazon ECS task definition
#      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#      with:
#        task-definition: ${{ steps.task-def.outputs.task-definition }}
#        service: blog-admin-ecs-service
#        cluster: blog-admin-cluster
#        wait-for-service-stability: true

name: Deploy blog-admin

on:
  push:
    branches:
      - master
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: clean bootJar
        run: ./gradlew clean bootJar

      - uses: actions/checkout@master
      - name: copy file
        uses: appleboy/scp-action@master
        with:
          host: 115.71.238.146
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "./blog-admin/build/libs/blog-admin-0.0.1-BLOG.jar"
          target: "~/blog/jar"
          script: ./blog.jar.sh