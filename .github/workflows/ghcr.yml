name: velog docker cd

on:
  push:
    branches:
      - docker
      - master
      - develop
env:
  DOCKER_IMAGE: ghcr.io/yusunjo/blog
  VERSION: ${{ github.sha }}
  API_RESOURCE_FILE: blog-api/src/main/resources
  ADMIN_RESOURCE_FILE: blog-admin/src/main/resources

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create application-aws.properties
        env:
          CLOUD_AWS_CREDENTIALS_ACCESS_KEY: ${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}
          CLOUD_AWS_CREDENTIALS_SECRET_KEY: ${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}
          RESOURCE_FILE: blog-admin/src/main/resources/aws-key.yml
        run: |
          echo -e "cloud.aws.credentials.accessKey=$CLOUD_AWS_CREDENTIALS_ACCESS_KEY\ncloud.aws.credentials.secretKey=$CLOUD_AWS_CREDENTIALS_SECRET_KEY" > $API_RESOURCE_FILE/application-aws.properties
          echo -e "cloud.aws.credentials.accessKey=$CLOUD_AWS_CREDENTIALS_ACCESS_KEY\ncloud.aws.credentials.secretKey=$CLOUD_AWS_CREDENTIALS_SECRET_KEY" > $ADMIN_RESOURCE_FILE/application-aws.properties

      - name: Create rds.yml file
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo -e "spring.datasource.hikari.username=$DB_USERNAME\nspring.datasource.hikari.password=$DB_PASSWORD" > $API_RESOURCE_FILE/application-rds.properties
          echo -e "spring.datasource.hikari.username=$DB_USERNAME\nspring.datasource.hikari.password=$DB_PASSWORD" > $ADMIN_RESOURCE_FILE/application-rds.properties

      - name: Create application-google.properties file
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          GRANT_TYPE: authorization_code
          BASE_URL: https://www.googleapis.com
          TOKEN_URL: /oauth2/v4/token
          PROFILE_URL: /oauth2/v3/userinfo
        run: |
          echo -e "google.auth.client_id=$CLIENT_ID\ngoogle.auth.client_secret=$CLIENT_SECRET\ngoogle.auth.grant_type=$GRANT_TYPE\ngoogle.auth.base_url=$BASE_URL\ngoogle.auth.token_url=$TOKEN_URL\ngoogle.auth.profile_url=$PROFILE_URL" > $API_RESOURCE_FILE/application-google.properties

      - name: Create application-fb.properties file
        env:
          FB_CLIENT_ID: ${{ secrets.FB_CLIENT_ID }}
          FB_CLIENT_SECRET: ${{ secrets.FB_CLIENT_SECRET }}
          FB_BASE_URL: https://graph.facebook.com
          FB_PROFILE_URL: /v13.0/me
        run: |
          echo -e "facebook.auth.client_id=$FB_CLIENT_ID\nfacebook.auth.client_secret=$FB_CLIENT_SECRET\nfacebook.auth.base_url=$FB_BASE_URL\nfacebook.auth.profile_url=$FB_PROFILE_URL" > $API_RESOURCE_FILE/application-fb.properties

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: blog
          password: ${{ secrets.CR_PAT }}

      - name: docker image build and push
        run: |
          docker build -t $DOCKER_IMAGE/admin:$VERSION -f Dockerfile_admin .
          docker build -t $DOCKER_IMAGE/api:$VERSION -f Dockerfile_api .
          docker tag $DOCKER_IMAGE/admin:$VERSION $DOCKER_IMAGE/admin:latest
          docker tag $DOCKER_IMAGE/api:$VERSION $DOCKER_IMAGE/api:latest
          docker push $DOCKER_IMAGE/admin:$VERSION
          docker push $DOCKER_IMAGE/admin:latest
          docker push $DOCKER_IMAGE/api:$VERSION
          docker push $DOCKER_IMAGE/api:latest
          echo -e "${{ secrets.CR_PAT }}" > deploy/GIT-TOKEN.txt
          cat deploy/GIT-TOKEN.txt

      - name: copy file
        uses: appleboy/scp-action@master
        with:
          host: 115.71.238.146
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "deploy/GIT-TOKEN.txt deploy/deploy-docker.sh"
          target: "~/deploy"

      - name: ssh
        uses: appleboy/ssh-action@master
        with:
          host: 115.71.238.146
          username: root
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            chmod +x ~/deploy/deploy-docker.sh
            ~/deploy/deploy-docker.sh